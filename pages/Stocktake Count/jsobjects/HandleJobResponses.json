{
  "unpublishedCollection": {
    "name": "HandleJobResponses",
    "pageId": "Stocktake Count",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\n\tcreateJobResponse: () => {\n\t\tif (GetJobOrderJobResponses.data.data.getJobOrder.jobResponses.length == 0) {\n\t\t\tif (selectStocktakeCarrier.selectedOptionValue == \"\") {\n\t\t\t\treturn CreateJobResponseNoCarrier.run()\n\t\t\t\t.then(() => GetJobOrderJobResponses.run())\n\t\t\t} else {\n\t\t\t\treturn CreateJobResponseCarrier.run()\n\t\t\t\t.then(() => GetJobOrderJobResponses.run())\n\t\t\t}\n\t\t}\n\t\tif (this.activeJobResponse() == \"\") {\n\t\t\tif (selectStocktakeCarrier.selectedOptionValue == \"\") {\n\t\t\t\treturn CreateJobResponseNoCarrier.run()\n\t\t\t\t.then(() => GetJobOrderJobResponses.run())\n\t\t\t} else {\n\t\t\t\treturn CreateJobResponseCarrier.run()\n\t\t\t\t.then(() => GetJobOrderJobResponses.run())\n\t\t\t}\n\t\t}\n\t\treturn GetJobOrderJobResponses.run()\n\t},\n\tsubmitCounts: () => {\n\t\tif (HandleOwnerStatus.getOwnerID() == \"\") {\n\t\t\treturn AddStocktakeCountNoOwner.run();\n\t\t} else {\n\t\t\treturn AddStocktakeCountOwner.run();\n\t\t}\n\t},\n\tactiveJobResponse: () => {\n\t\tif (GetJobOrderJobResponses.data.data == null) {\n\t\t\treturn \"\"\n\t\t}\n\t\tfor (let i = 0; i < GetJobOrderJobResponses.data.data.getJobOrder.jobResponses.length; i++) {\n\t\t\tlet line = GetJobOrderJobResponses.data.data.getJobOrder.jobResponses[i]\n\t\t\tif (selectStocktakeCarrier.selectedOptionLabel != \"\") {\n\t\t\t\tfor (let j = 0; j < line.materialActual.length; j ++) {\n\t\t\t\t\tif (line.materialActual[j].carrier != null) {\n\t\t\t\t\t\tif (line.materialActual[j].carrier.code == selectStocktakeCarrier.selectedOptionLabel) {\n\t\t\t\t\t\t\treturn line.id\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (line.materialActual.carrier == null) {\n\t\t\t\t\treturn line.id\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\"\n\t},\n\tactiveJobResponseIsClosed: () => {\n\t\tlet id = this.activeJobResponse()\n\t\tif (id != \"\") {\n\t\t\tfor (let i = 0; i < GetJobOrderJobResponses.data.data.getJobOrder.jobResponses.length; i++) {\n\t\t\t\tif (GetJobOrderJobResponses.data.data.getJobOrder.jobResponses[i].id == id) {\n\t\t\t\t\tif (GetJobOrderJobResponses.data.data.getJobOrder.jobResponses[i].endDateTime != null) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\t\n}",
    "variables": []
  },
  "id": "Stocktake Count_HandleJobResponses",
  "deleted": false,
  "gitSyncId": "618b5832da7cd651ee2730f2_62872a14309fd93a9bf1e0d1"
}