{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "runStockValidationQuery",
    "fullyQualifiedName": "StockReportValidation.runStockValidationQuery",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "StockTakeSerializedLots",
    "collectionId": "StockTakeSerializedLots_StockReportValidation",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() =>{\n\t\tFetchSerializedUnits.run(\n\t\t\t() => {\n\t\t\t\t\t\tstoreValue('validationQueryExecuted',true,false)\n\t\t\t\t\t\tstoreValue('QueryReturn',FetchSerializedUnits.data.data.validateStocktake,false)\n\t\t\t}, \n\t\t\t() => {\n\t\t\t\tshowAlert(\"Failed to execute Stockcheck query\")\n\t\t\t}\n\t\t)\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() =>{\n\t\tFetchSerializedUnits.run(\n\t\t\t() => {\n\t\t\t\t\t\tstoreValue('validationQueryExecuted',true,false)\n\t\t\t\t\t\tstoreValue('QueryReturn',FetchSerializedUnits.data.data.validateStocktake,false)\n\t\t\t}, \n\t\t\t() => {\n\t\t\t\tshowAlert(\"Failed to execute Stockcheck query\")\n\t\t\t}\n\t\t)\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "StockTakeSerializedLots_StockReportValidation.runStockValidationQuery",
  "deleted": false,
  "gitSyncId": "618b5832da7cd651ee2730f2_61c43436e89bc475f3ccfd2d"
}